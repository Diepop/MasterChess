// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UnityRpc.proto

#include "UnityRpc.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace UnityRpc {
constexpr Vector2Int::Vector2Int(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : x_(0)
  , y_(0){}
struct Vector2IntDefaultTypeInternal {
  constexpr Vector2IntDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Vector2IntDefaultTypeInternal() {}
  union {
    Vector2Int _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Vector2IntDefaultTypeInternal _Vector2Int_default_instance_;
constexpr PieceMovement::PieceMovement(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : startpos_(nullptr)
  , endpos_(nullptr){}
struct PieceMovementDefaultTypeInternal {
  constexpr PieceMovementDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PieceMovementDefaultTypeInternal() {}
  union {
    PieceMovement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PieceMovementDefaultTypeInternal _PieceMovement_default_instance_;
}  // namespace UnityRpc
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_UnityRpc_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_UnityRpc_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_UnityRpc_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_UnityRpc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityRpc::Vector2Int, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityRpc::Vector2Int, x_),
  PROTOBUF_FIELD_OFFSET(::UnityRpc::Vector2Int, y_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityRpc::PieceMovement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityRpc::PieceMovement, startpos_),
  PROTOBUF_FIELD_OFFSET(::UnityRpc::PieceMovement, endpos_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::UnityRpc::Vector2Int)},
  { 7, -1, sizeof(::UnityRpc::PieceMovement)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityRpc::_Vector2Int_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityRpc::_PieceMovement_default_instance_),
};

const char descriptor_table_protodef_UnityRpc_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016UnityRpc.proto\022\010UnityRpc\032\033google/proto"
  "buf/empty.proto\"\"\n\nVector2Int\022\t\n\001x\030\001 \001(\005"
  "\022\t\n\001y\030\002 \001(\005\"]\n\rPieceMovement\022&\n\010startPos"
  "\030\001 \001(\0132\024.UnityRpc.Vector2Int\022$\n\006endPos\030\002"
  " \001(\0132\024.UnityRpc.Vector2Int2\201\001\n\rUnityRPCB"
  "oard\0227\n\005Reset\022\026.google.protobuf.Empty\032\026."
  "google.protobuf.Empty\0227\n\004Move\022\027.UnityRpc"
  ".PieceMovement\032\026.google.protobuf.Emptyb\006"
  "proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_UnityRpc_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_UnityRpc_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_UnityRpc_2eproto = {
  false, false, 326, descriptor_table_protodef_UnityRpc_2eproto, "UnityRpc.proto", 
  &descriptor_table_UnityRpc_2eproto_once, descriptor_table_UnityRpc_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_UnityRpc_2eproto::offsets,
  file_level_metadata_UnityRpc_2eproto, file_level_enum_descriptors_UnityRpc_2eproto, file_level_service_descriptors_UnityRpc_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_UnityRpc_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_UnityRpc_2eproto);
  return descriptor_table_UnityRpc_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_UnityRpc_2eproto(&descriptor_table_UnityRpc_2eproto);
namespace UnityRpc {

// ===================================================================

class Vector2Int::_Internal {
 public:
};

Vector2Int::Vector2Int(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityRpc.Vector2Int)
}
Vector2Int::Vector2Int(const Vector2Int& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:UnityRpc.Vector2Int)
}

void Vector2Int::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&x_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Vector2Int::~Vector2Int() {
  // @@protoc_insertion_point(destructor:UnityRpc.Vector2Int)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Vector2Int::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Vector2Int::ArenaDtor(void* object) {
  Vector2Int* _this = reinterpret_cast< Vector2Int* >(object);
  (void)_this;
}
void Vector2Int::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Vector2Int::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Vector2Int::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityRpc.Vector2Int)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Vector2Int::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vector2Int::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityRpc.Vector2Int)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_x(), target);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityRpc.Vector2Int)
  return target;
}

size_t Vector2Int::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityRpc.Vector2Int)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_x());
  }

  // int32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_y());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vector2Int::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityRpc.Vector2Int)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector2Int* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Vector2Int>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityRpc.Vector2Int)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityRpc.Vector2Int)
    MergeFrom(*source);
  }
}

void Vector2Int::MergeFrom(const Vector2Int& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityRpc.Vector2Int)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    _internal_set_x(from._internal_x());
  }
  if (from.y() != 0) {
    _internal_set_y(from._internal_y());
  }
}

void Vector2Int::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityRpc.Vector2Int)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector2Int::CopyFrom(const Vector2Int& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityRpc.Vector2Int)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector2Int::IsInitialized() const {
  return true;
}

void Vector2Int::InternalSwap(Vector2Int* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vector2Int, y_)
      + sizeof(Vector2Int::y_)
      - PROTOBUF_FIELD_OFFSET(Vector2Int, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Vector2Int::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PieceMovement::_Internal {
 public:
  static const ::UnityRpc::Vector2Int& startpos(const PieceMovement* msg);
  static const ::UnityRpc::Vector2Int& endpos(const PieceMovement* msg);
};

const ::UnityRpc::Vector2Int&
PieceMovement::_Internal::startpos(const PieceMovement* msg) {
  return *msg->startpos_;
}
const ::UnityRpc::Vector2Int&
PieceMovement::_Internal::endpos(const PieceMovement* msg) {
  return *msg->endpos_;
}
PieceMovement::PieceMovement(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityRpc.PieceMovement)
}
PieceMovement::PieceMovement(const PieceMovement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_startpos()) {
    startpos_ = new ::UnityRpc::Vector2Int(*from.startpos_);
  } else {
    startpos_ = nullptr;
  }
  if (from._internal_has_endpos()) {
    endpos_ = new ::UnityRpc::Vector2Int(*from.endpos_);
  } else {
    endpos_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:UnityRpc.PieceMovement)
}

void PieceMovement::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&startpos_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&endpos_) -
    reinterpret_cast<char*>(&startpos_)) + sizeof(endpos_));
}

PieceMovement::~PieceMovement() {
  // @@protoc_insertion_point(destructor:UnityRpc.PieceMovement)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PieceMovement::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete startpos_;
  if (this != internal_default_instance()) delete endpos_;
}

void PieceMovement::ArenaDtor(void* object) {
  PieceMovement* _this = reinterpret_cast< PieceMovement* >(object);
  (void)_this;
}
void PieceMovement::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PieceMovement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PieceMovement::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityRpc.PieceMovement)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && startpos_ != nullptr) {
    delete startpos_;
  }
  startpos_ = nullptr;
  if (GetArena() == nullptr && endpos_ != nullptr) {
    delete endpos_;
  }
  endpos_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PieceMovement::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .UnityRpc.Vector2Int startPos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_startpos(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .UnityRpc.Vector2Int endPos = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_endpos(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PieceMovement::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityRpc.PieceMovement)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .UnityRpc.Vector2Int startPos = 1;
  if (this->has_startpos()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::startpos(this), target, stream);
  }

  // .UnityRpc.Vector2Int endPos = 2;
  if (this->has_endpos()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::endpos(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityRpc.PieceMovement)
  return target;
}

size_t PieceMovement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityRpc.PieceMovement)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .UnityRpc.Vector2Int startPos = 1;
  if (this->has_startpos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *startpos_);
  }

  // .UnityRpc.Vector2Int endPos = 2;
  if (this->has_endpos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *endpos_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PieceMovement::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityRpc.PieceMovement)
  GOOGLE_DCHECK_NE(&from, this);
  const PieceMovement* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PieceMovement>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityRpc.PieceMovement)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityRpc.PieceMovement)
    MergeFrom(*source);
  }
}

void PieceMovement::MergeFrom(const PieceMovement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityRpc.PieceMovement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_startpos()) {
    _internal_mutable_startpos()->::UnityRpc::Vector2Int::MergeFrom(from._internal_startpos());
  }
  if (from.has_endpos()) {
    _internal_mutable_endpos()->::UnityRpc::Vector2Int::MergeFrom(from._internal_endpos());
  }
}

void PieceMovement::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityRpc.PieceMovement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PieceMovement::CopyFrom(const PieceMovement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityRpc.PieceMovement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PieceMovement::IsInitialized() const {
  return true;
}

void PieceMovement::InternalSwap(PieceMovement* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PieceMovement, endpos_)
      + sizeof(PieceMovement::endpos_)
      - PROTOBUF_FIELD_OFFSET(PieceMovement, startpos_)>(
          reinterpret_cast<char*>(&startpos_),
          reinterpret_cast<char*>(&other->startpos_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PieceMovement::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace UnityRpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::UnityRpc::Vector2Int* Arena::CreateMaybeMessage< ::UnityRpc::Vector2Int >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityRpc::Vector2Int >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityRpc::PieceMovement* Arena::CreateMaybeMessage< ::UnityRpc::PieceMovement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityRpc::PieceMovement >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
